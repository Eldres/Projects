#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <iomanip>

using namespace std;

const int MAX_SIZE = 1000;

void fillFile(fstream &file)
{
	int randomInt = ((rand() % MAX_SIZE) + 1);
	cout << "Filling file with random numbers (1-999)......." << endl;
	while (file.is_open())
	{
		for (int i = 0; i < 10; i++)
		{
			file << (randomInt) << endl;
		}
		file.close();
	}
}

void merge(fstream &file1, fstream &file2, fstream &merge)
{
	string line;
	int counter = 1;
	int num1 = 0;
	int num2 = 0;
	bool first = true;

	if (file1.is_open())
	{
		getline(file1, line);
		num1 = atoi(line.c_str()); //convert alpha to int 
	}
	else if (file2.is_open())
	{
		getline(file2, line);
		num2 = atoi(line.c_str()); //convert alpha to int
	}

	while ((file1.is_open()) || (file2.is_open()))
	{
		if (file1.is_open() && file2.is_open())
		{
			if (num1 >= num2)
			{
				merge << counter++ << ": " << num1 << endl;
				getline(file1, line);
				num1 = atoi(line.c_str());
			}
			else
			{
				merge << counter++ << ": " << num2 << endl;
				getline(file2, line);
				num2 = atoi(line.c_str());
			}
		}
		else 
		{
			if (first)
			{
				if (!file1.is_open())
				{
					merge << counter++ << ": " << num2 << endl;
				}
				else if (!file2.is_open())
				{
					merge << counter++ << ": " << num1 << endl;
				}
			}
			else
			{
				merge << counter++ << ": " << line << endl;
			}
			if (file1.is_open())
			{
				getline(file1, line);
			}
			else if (file2.is_open())
			{
				getline(file2, line);
			}
			first = false; // break condition for while-loop
		}
	}
}

int main()
{
	string line; // used to read in each line from the file
	fstream file1("file1.txt", ios::out | ios::app); // creates a file to read/write from/to a file
	fstream file2("file2.txt", ios::out | ios::app);
	fstream mergeFile("mergedFile.txt");

	fillFile(file1);
	cout << "File 1 now filled with 100 random numbers.\n";

	fillFile(file2);
	cout << "File 2 now filled with 100 random numbers.\n";

	merge(file1, file2, mergeFile);

	file1.close();
	file2.close();
	mergeFile.close();

	return 0;
}
