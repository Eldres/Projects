#include <cstdlib>
#include <iostream>
#include <vector>
#include <iomanip>
using namespace std;

void showMatrix(vector <vector<int> > matrix)
{
	for (int i = 0; i < matrix.size(); i++) // i is the row in the matrix
	{
		for (int j = 0; j < matrix[i].size(); j++) // j is the col in the matrix
		{
			cout << matrix[i][j] << " ";
		}
		cout << endl;
	}
	cout << endl;
}

vector <vector<int> > vectorMultiply(vector <vector<int> > &matrix1, vector<vector<int> > &matrix2)
{
	vector<vector<int> > result;
	int sum = 0;
	for (int i = 0; i < matrix1.size(); i++)
	{
		for (int j = 0; j < matrix1[i].size(); j++)
		{
			for (int k = 0; k < matrix1[j].size(); k++)
			{
				sum = sum + matrix1[i][k] * matrix2[k][j];
			}
			result[i][j] = sum;
			sum = 0;
		}
	}

	return result;
}

int main()
{
	vector <vector<int> > firstMatrix;
	vector <vector<int> > secondMatrix;
	int inputSizeFMRow; //input for size of first matrix row
	int inputSizeFMCol; //input for size of first matrix col
	int inputSizeSMRow; //input for size of second matrix row
	int inputSizeSMCol; //input for size of second matrix col
	int userInput; //elements provided by the user

	cout << "Please enter the row size of the first matrix: ";
	cin >> inputSizeFMRow;
	cout << "Please enter the column size of the first matrix: ";
	cin >> inputSizeFMCol;



	cout << "Now please enter the elements of the first matrix.\n";
	for (int row = 0; row < inputSizeFMRow; row++)
	{
		for (int col = 0; col < inputSizeFMCol; col++)
         {
			cin >> userInput;
			firstMatrix[row].push_back(userInput);
		}
	}

	cout << "Please enter the row size of the second matrix: ";
	cin >> inputSizeSMRow;
	cout << "Please enter the column size of the second matrix: ";
	cin >> inputSizeSMCol;

	if (inputSizeFMRow != inputSizeSMCol)
	{
		cout << "Matrices with entered sizes cannot be multiplied together.\n";
	}
	else
	{
		cout << "Now please enter the elements of the second matrix.\n";
		for (int row = 0; row < inputSizeSMRow; row++)
		{
			cout << "Row: ";
			cin >> userInput;
			secondMatrix.push_back(vector<int>(userInput));
			for (int col = 0; col < inputSizeSMCol; col++)
			{
				cout << "Column: ";
				cin >> userInput;
				secondMatrix[row].push_back(row*col);
			}
		}
		vector <vector<int> > multiMatrix = vectorMultiply(firstMatrix, secondMatrix);
		showMatrix(multiMatrix);
	}

	return 0;
}